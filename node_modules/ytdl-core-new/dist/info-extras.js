"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const qs = require('querystring');
const url = require('url');
const Entities = require('html-entities').AllHtmlEntities;
const util = require('./util');
const parseTime = require('m3u8stream/dist/parse-time');
const VIDEO_URL = 'https://www.youtube.com/watch?v=';
const getMetaItem = (body, name) => {
    return util.between(body, `<meta itemprop="${name}" content="`, '">');
};
/**
 * Get video description from html
 *
 * @param {string} html
 * @return {string}
 */
exports.getVideoDescription = (html) => {
    const regex = /<p.*?id="eow-description".*?>(.+?)<\/p>[\n\r\s]*?<\/div>/im;
    const description = html.match(regex);
    return description ?
        Entities.decode(util.stripHTML(description[1])) : '';
};
/**
 * Get video media (extra information) from html
 *
 * @param {string} body
 * @return {Object}
 */
exports.getVideoMedia = (body) => {
    let mediainfo = util.between(body, '<div id="watch-description-extras">', '<div id="watch-discussion" class="branded-page-box yt-card">');
    if (mediainfo === '') {
        return {};
    }
    const regexp = /<h4 class="title">([\s\S]*?)<\/h4>[\s\S]*?<ul .*?class=".*?watch-info-tag-list">[\s\S]*?<li>([\s\S]*?)<\/li>(?:\s*?<li>([\s\S]*?)<\/li>)?/g;
    const contentRegexp = /(?: - (\d{4}) \()?<a .*?(?:href="([^"]+)")?.*?>(.*?)<\/a>/;
    const imgRegexp = /<img src="([^"]+)".*?>/;
    const media = {};
    const image = imgRegexp.exec(mediainfo);
    if (image) {
        media.image = url.resolve(VIDEO_URL, image[1]);
    }
    let match;
    while ((match = regexp.exec(mediainfo)) != null) {
        let [, key, value, detail] = match;
        key = Entities.decode(key).trim().replace(/\s/g, '_').toLowerCase();
        const content = contentRegexp.exec(value);
        if (content) {
            let [, year, mediaUrl, value2] = content;
            if (year) {
                media.year = parseInt(year);
            }
            else if (detail) {
                media.year = parseInt(detail);
            }
            value = value.slice(0, content.index);
            if (key !== 'game' || value2 !== 'YouTube Gaming') {
                value += value2;
            }
            media[key + '_url'] = url.resolve(VIDEO_URL, mediaUrl);
        }
        media[key] = Entities.decode(value);
    }
    return media;
};
/**
 * Get video Owner from html.
 */
const userRegexp = /<a href="\/user\/([^"]+)/;
const verifiedRegexp = /<span .*?(aria-label="Verified")(.*?(?=<\/span>))/;
exports.getAuthor = (body) => {
    let ownerinfo = util.between(body, '<div id="watch7-user-header" class=" spf-link ">', '<div id="watch8-action-buttons" class="watch-action-buttons clearfix">');
    if (ownerinfo === '') {
        return {};
    }
    const channelName = Entities.decode(util.between(util.between(ownerinfo, '<div class="yt-user-info">', '</div>'), '>', '</a>'));
    const userMatch = ownerinfo.match(userRegexp);
    const verifiedMatch = ownerinfo.match(verifiedRegexp);
    const channelID = getMetaItem(body, 'channelId');
    const username = userMatch ? userMatch[1] : util.between(util.between(body, '<span itemprop="author"', '</span>'), '/user/', '">');
    return {
        id: channelID,
        name: channelName,
        avatar: url.resolve(VIDEO_URL, util.between(ownerinfo, 'data-thumb="', '"')),
        verified: !!verifiedMatch,
        user: username,
        channel_url: 'https://www.youtube.com/channel/' + channelID,
        user_url: 'https://www.youtube.com/user/' + username,
    };
};
/**
 * Get video published at from html.
 *
 * @param {string} body
 * @return {string}
 */
exports.getPublished = (body) => {
    return Date.parse(getMetaItem(body, 'datePublished'));
};
/**
 * Get video published at from html.
 * Credits to https://github.com/paixaop.
 *
 * @param {string} body
 * @return {Array.<Object>}
 */
exports.getRelatedVideos = (body) => {
    let jsonStr = util.between(body, '\'RELATED_PLAYER_ARGS\': ', /,[\n\r]/);
    let watchNextJson, rvsParams, secondaryResults;
    try {
        jsonStr = JSON.parse(jsonStr);
        watchNextJson = JSON.parse(jsonStr.watch_next_response);
        rvsParams = jsonStr.rvs.split(',').map((e) => qs.parse(e));
        secondaryResults = watchNextJson.contents.twoColumnWatchNextResults.secondaryResults.secondaryResults.results;
    }
    catch (err) {
        return [];
    }
    let videos = [];
    for (let result of secondaryResults) {
        let details = result.compactVideoRenderer;
        if (details) {
            try {
                let viewCount = details.viewCountText.simpleText;
                let shortViewCount = details.shortViewCountText.simpleText;
                let rvsDetails = rvsParams.find((elem) => elem.id === details.videoId);
                if (!/^\d/.test(shortViewCount)) {
                    shortViewCount = rvsDetails && rvsDetails.short_view_count_text || '';
                }
                viewCount = (/^\d/.test(viewCount) ? viewCount : shortViewCount).split(' ')[0];
                videos.push({
                    id: details.videoId,
                    title: details.title.simpleText,
                    author: details.shortBylineText.runs[0].text,
                    ucid: details.shortBylineText.runs[0].navigationEndpoint.browseEndpoint.browseId,
                    author_thumbnail: details.channelThumbnail.thumbnails[0].url,
                    short_view_count_text: shortViewCount.split(' ')[0],
                    view_count: viewCount.replace(',', ''),
                    length_seconds: details.lengthText ?
                        Math.floor(parseTime.humanStr(details.lengthText.simpleText) / 1000) :
                        rvsParams && rvsParams.length_seconds + '',
                    video_thumbnail: details.thumbnail.thumbnails[0].url,
                });
            }
            catch (err) {
                continue;
            }
        }
    }
    return videos;
};
/**
 * Get like count from html.
 *
 * @param {string} body
 * @return {number}
 */
const getLikesRegex = /\\"likeCount\\":(\d+?),\\"likeCountText\\"/;
exports.getLikes = (body) => {
    const likes = body.match(getLikesRegex);
    return likes ? Number(likes[1]) : null;
};
/**
 * Get dislike count from html.
 *
 * @param {string} body
 * @return {number}
 */
const getDislikesRegex = /\\"dislikeCount\\":(\d+?),\\"dislikeCountText\\"/;
exports.getDislikes = (body) => {
    const dislikes = body.match(getDislikesRegex);
    return dislikes ? Number(dislikes[1]) : null;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mby1leHRyYXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9saWIvaW5mby1leHRyYXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLEVBQUUsR0FBWSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDM0MsTUFBTSxHQUFHLEdBQVcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ25DLE1BQU0sUUFBUSxHQUFNLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxlQUFlLENBQUM7QUFDN0QsTUFBTSxJQUFJLEdBQVUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3RDLE1BQU0sU0FBUyxHQUFLLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBRTFELE1BQU0sU0FBUyxHQUFHLGtDQUFrQyxDQUFDO0FBQ3JELE1BQU0sV0FBVyxHQUFHLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxFQUFFO0lBQ2pELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLElBQUksYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3hFLENBQUMsQ0FBQztBQUVGOzs7OztHQUtHO0FBQ1UsUUFBQSxtQkFBbUIsR0FBRyxDQUFDLElBQVksRUFBVSxFQUFFO0lBQzFELE1BQU0sS0FBSyxHQUFHLDREQUE0RCxDQUFDO0lBQzNFLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsT0FBTyxXQUFXLENBQUMsQ0FBQztRQUNsQixRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQUVGOzs7OztHQUtHO0FBQ1UsUUFBQSxhQUFhLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTtJQUNwQyxJQUFJLFNBQVMsR0FBRyxJQUFJ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