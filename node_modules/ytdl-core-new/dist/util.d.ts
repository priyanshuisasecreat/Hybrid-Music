/**
 * Sort formats from highest quality to lowest.
 * By resolution, then video bitrate, then audio bitrate.
 *
 * @param {Object} a
 * @param {Object} b
 */
export declare const sortFormats: (a: any, b: any) => number;
/**
 * Choose a format depending on the given options.
 *
 * @param {Array.<Object>} formats
 * @param {Object} options
 * @return {Object|Error}
 */
export declare const chooseFormat: (formats: any, options: any) => any;
/**
 * @param {Array.<Object>} formats
 * @param {Function} filter
 * @return {Array.<Object>}
 */
export declare const filterFormats: (formats: any, filter: any) => any;
/**
 * Extract string inbetween another.
 */
export declare const between: (haystack: string, left: string, right: string | RegExp) => string;
export declare const getURLVideoID: (link: string) => string | Error;
/**
 * Gets video ID either from a url or by checking if the given string
 * matches the video ID format.
 *
 * @param {string} str
 * @return {string|Error}
 */
export declare const getVideoID: (str: string) => string | Error;
export declare const validateID: (id: string) => boolean;
/**
 * Checks wether the input string includes a valid id.
 *
 * @param {string} string
 * @return {boolean}
 */
export declare const validateURL: (string: string) => boolean;
/**
 * @param {Object} format
 * @return {Object}
 */
export declare const addFormatMeta: (format: any) => any;
/**
 * Get only the string from an HTML string.
 *
 * @param {string} html
 * @return {string}
 */
export declare const stripHTML: (html: string) => string;
